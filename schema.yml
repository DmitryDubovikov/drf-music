openapi: 3.0.3
info:
  title: Music
  version: 1.0.0
  description: 'project description: singer, album, song, content'
paths:
  /api/album/:
    get:
      operationId: api_album_list
      description: A simple ViewSet for getting all albums.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
          description: ''
    post:
      operationId: api_album_create
      description: A simple ViewSet for getting all albums.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
  /api/album/{id}/:
    get:
      operationId: api_album_retrieve
      description: A simple ViewSet for getting all albums.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    put:
      operationId: api_album_update
      description: A simple ViewSet for getting all albums.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Album'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Album'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Album'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    patch:
      operationId: api_album_partial_update
      description: A simple ViewSet for getting all albums.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbum'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
          description: ''
    delete:
      operationId: api_album_destroy
      description: A simple ViewSet for getting all albums.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this album.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/content/:
    get:
      operationId: api_content_list
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
          description: ''
    post:
      operationId: api_content_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
  /api/content/{id}/:
    get:
      operationId: api_content_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this content.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    put:
      operationId: api_content_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this content.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Content'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Content'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Content'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    patch:
      operationId: api_content_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this content.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedContent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedContent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedContent'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Content'
          description: ''
    delete:
      operationId: api_content_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this content.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/singer/:
    get:
      operationId: api_singer_list
      description: A simple ViewSet for getting all singers.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Singer'
          description: ''
    post:
      operationId: api_singer_create
      description: A simple ViewSet for getting all singers.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Singer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Singer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Singer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
  /api/singer/{id}/:
    get:
      operationId: api_singer_retrieve
      description: A simple ViewSet for getting all singers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this singer.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
    put:
      operationId: api_singer_update
      description: A simple ViewSet for getting all singers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this singer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Singer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Singer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Singer'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
    patch:
      operationId: api_singer_partial_update
      description: A simple ViewSet for getting all singers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this singer.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSinger'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSinger'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSinger'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Singer'
          description: ''
    delete:
      operationId: api_singer_destroy
      description: A simple ViewSet for getting all singers.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this singer.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/song/:
    get:
      operationId: api_song_list
      description: A simple ViewSet for getting all songs.
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
          description: ''
    post:
      operationId: api_song_create
      description: A simple ViewSet for getting all songs.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Song'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
  /api/song/{id}/:
    get:
      operationId: api_song_retrieve
      description: A simple ViewSet for getting all songs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    put:
      operationId: api_song_update
      description: A simple ViewSet for getting all songs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Song'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Song'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Song'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    patch:
      operationId: api_song_partial_update
      description: A simple ViewSet for getting all songs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSong'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSong'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Song'
          description: ''
    delete:
      operationId: api_song_destroy
      description: A simple ViewSet for getting all songs.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this song.
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
components:
  schemas:
    Album:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        singer:
          type: integer
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
      - singer
      - title
      - year
    Content:
      type: object
      properties:
        song:
          type: integer
        track_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        album:
          type: integer
      required:
      - album
      - song
      - track_number
    PatchedAlbum:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        singer:
          type: integer
        year:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedContent:
      type: object
      properties:
        song:
          type: integer
        track_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        album:
          type: integer
    PatchedSinger:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
    PatchedSong:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
    Singer:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
      required:
      - name
    Song:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
      required:
      - title
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
